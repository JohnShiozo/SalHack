package me.ionar.salhack.module.exploit;

import java.util.function.Predicate;
import me.ionar.salhack.events.client.EventClientTick;
import me.ionar.salhack.module.Module;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.util.math.RayTraceResult.Type;

public class EntityMineModule extends Module {
    private boolean focus = false;
    @EventHandler
    private Listener<EventClientTick> OnTick = new Listener((event) -> {
        this.mc.world.loadedEntityList.stream().filter((entity) -> {
            return entity instanceof EntityLivingBase;
        }).filter((entity) -> {
            return this.mc.player == entity;
        }).map((entity) -> {
            return (EntityLivingBase)entity;
        }).filter((entity) -> {
            return !entity.isDead;
        }).forEach(this::process);
        RayTraceResult normal_result = this.mc.objectMouseOver;
        if (normal_result != null) {
            this.focus = normal_result.typeOfHit == Type.ENTITY;
        }

    }, new Predicate[0]);

    public EntityMineModule() {
        super("EntityMine", new String[]{"EntityMine"}, "mine through stuff", "NONE", 16775953, Module.ModuleType.EXPLOIT);
    }

    private void process(EntityLivingBase event) {
        RayTraceResult bypass_entity_result = event.rayTrace(6.0D, this.mc.getRenderPartialTicks());
        if (bypass_entity_result != null && this.focus && bypass_entity_result.typeOfHit == Type.BLOCK) {
            BlockPos block_pos = bypass_entity_result.getBlockPos();
            if (this.mc.gameSettings.keyBindAttack.isKeyDown()) {
                this.mc.playerController.onPlayerDamageBlock(block_pos, EnumFacing.UP);
            }
        }

    }
}
